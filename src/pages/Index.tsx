import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

const API_URL = 'https://functions.poehali.dev/c8ed8102-c061-4f5b-ac2c-ac7d0710fe7b';
const AUTH_URL = 'https://functions.poehali.dev/59f82144-8fc0-41bb-b8d5-ad0b3d77295b';

const Index = () => {
  const [activeSection, setActiveSection] = useState('–≥–ª–∞–≤–Ω–∞—è');
  const [applications, setApplications] = useState([]);
  const [formData, setFormData] = useState({ childName: '', childAge: '', parentName: '', phone: '', comment: '' });
  const [isCoachLoggedIn, setIsCoachLoggedIn] = useState(false);
  const [coachData, setCoachData] = useState(null);
  const [loginForm, setLoginForm] = useState({ username: '', password: '' });
  const [loginError, setLoginError] = useState('');
  const [showRegister, setShowRegister] = useState(false);
  const [registerForm, setRegisterForm] = useState({ username: '', password: '', fullName: '' });
  const [registerError, setRegisterError] = useState('');
  const [athletesList, setAthletesList] = useState([
    { id: 1, name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤ –ò–≤–∞–Ω', age: 15, achievements: '1 –º–µ—Å—Ç–æ - –ö—É–±–æ–∫ –¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω–∞ 2024', image: 'üéø' },
    { id: 2, name: '–ü–µ—Ç—Ä–æ–≤–∞ –ú–∞—Ä–∏—è', age: 14, achievements: '2 –º–µ—Å—Ç–æ - –ü–µ—Ä–≤–µ–Ω—Å—Ç–≤–æ –†–¢ 2024', image: '‚õ∑Ô∏è' },
    { id: 3, name: '–°–∏–¥–æ—Ä–æ–≤ –î–º–∏—Ç—Ä–∏–π', age: 16, achievements: '3 –º–µ—Å—Ç–æ - –ó–∏–º–Ω—è—è –°–ø–∞—Ä—Ç–∞–∫–∏–∞–¥–∞', image: 'üéø' },
    { id: 4, name: '–ö–æ–∑–ª–æ–≤–∞ –ï–ª–µ–Ω–∞', age: 13, achievements: '1 –º–µ—Å—Ç–æ - –Æ–Ω–∏–æ—Ä—Å–∫–∏–π –∫—É–±–æ–∫', image: '‚õ∑Ô∏è' }
  ]);
  const [newAthlete, setNewAthlete] = useState({ name: '', age: '', achievements: '', image: 'üéø' });
  const [showAddAthlete, setShowAddAthlete] = useState(false);
  const [scheduleList, setScheduleList] = useState([
    { id: 1, day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', time: '16:00 - 18:00', group: '–ú–ª–∞–¥—à–∞—è –≥—Ä—É–ø–ø–∞ (8-11 –ª–µ—Ç)', coach: '–ò–≤–∞–Ω–æ–≤ –ü.–°.' },
    { id: 2, day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', time: '18:00 - 20:00', group: '–°—Ç–∞—Ä—à–∞—è –≥—Ä—É–ø–ø–∞ (12-16 –ª–µ—Ç)', coach: '–ü–µ—Ç—Ä–æ–≤–∞ –ê.–ú.' },
    { id: 3, day: '–°—Ä–µ–¥–∞', time: '16:00 - 18:00', group: '–ú–ª–∞–¥—à–∞—è –≥—Ä—É–ø–ø–∞ (8-11 –ª–µ—Ç)', coach: '–ò–≤–∞–Ω–æ–≤ –ü.–°.' },
    { id: 4, day: '–°—Ä–µ–¥–∞', time: '18:00 - 20:00', group: '–°—Ç–∞—Ä—à–∞—è –≥—Ä—É–ø–ø–∞ (12-16 –ª–µ—Ç)', coach: '–ü–µ—Ç—Ä–æ–≤–∞ –ê.–ú.' },
    { id: 5, day: '–ü—è—Ç–Ω–∏—Ü–∞', time: '16:00 - 18:00', group: '–ú–ª–∞–¥—à–∞—è –≥—Ä—É–ø–ø–∞ (8-11 –ª–µ—Ç)', coach: '–ò–≤–∞–Ω–æ–≤ –ü.–°.' },
    { id: 6, day: '–ü—è—Ç–Ω–∏—Ü–∞', time: '18:00 - 20:00', group: '–°—Ç–∞—Ä—à–∞—è –≥—Ä—É–ø–ø–∞ (12-16 –ª–µ—Ç)', coach: '–ü–µ—Ç—Ä–æ–≤–∞ –ê.–ú.' },
    { id: 7, day: '–°—É–±–±–æ—Ç–∞', time: '10:00 - 13:00', group: '–û–±—â–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', coach: '–í—Å—è –∫–æ–º–∞–Ω–¥–∞' }
  ]);
  const [newSchedule, setNewSchedule] = useState({ day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', time: '', group: '', coach: '' });
  const [showAddSchedule, setShowAddSchedule] = useState(false);
  const [editingSchedule, setEditingSchedule] = useState<number | null>(null);



  const competitions = [
    { date: '15 –¥–µ–∫–∞–±—Ä—è 2024', name: '–ö—É–±–æ–∫ –ë–∞–≤–ª—ã', location: '–≥. –ë–∞–≤–ª—ã, –ª—ã–∂–Ω–∞—è –±–∞–∑–∞', status: 'upcoming' },
    { date: '20 —è–Ω–≤–∞—Ä—è 2025', name: '–ü–µ—Ä–≤–µ–Ω—Å—Ç–≤–æ –¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω–∞', location: '–≥. –ö–∞–∑–∞–Ω—å', status: 'upcoming' },
    { date: '10 —Ñ–µ–≤—Ä–∞–ª—è 2025', name: '–ó–∏–º–Ω—è—è –°–ø–∞—Ä—Ç–∞–∫–∏–∞–¥–∞', location: '–≥. –ê–ª—å–º–µ—Ç—å–µ–≤—Å–∫', status: 'upcoming' }
  ];



  const gallery = [
    { title: '–ö—É–±–æ–∫ –¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω–∞ 2024', image: 'üèÜ', description: '–ü–æ–±–µ–¥–∞ –≤ –∫–æ–º–∞–Ω–¥–Ω–æ–º –∑–∞—á–µ—Ç–µ' },
    { title: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ —Ç—Ä–∞—Å—Å–µ', image: '‚õ∑Ô∏è', description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–µ–∑–æ–Ω—É' },
    { title: '–¶–µ—Ä–µ–º–æ–Ω–∏—è –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è', image: 'ü•á', description: '1 –º–µ—Å—Ç–æ - –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤ –ò–≤–∞–Ω' },
    { title: '–ö–æ–º–∞–Ω–¥–Ω–æ–µ —Ñ–æ—Ç–æ', image: 'üì∏', description: '–í—Å—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ—Å–ª–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π' },
    { title: '–ó–∏–º–Ω–∏–π –ª–∞–≥–µ—Ä—å', image: 'üèîÔ∏è', description: '–£—á–µ–±–Ω–æ-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–π —Å–±–æ—Ä' },
    { title: '–Æ–Ω—ã–µ —á–µ–º–ø–∏–æ–Ω—ã', image: 'üéø', description: '–ù–∞—à–∏ –∑–≤—ë–∑–¥—ã' }
  ];

  useEffect(() => {
    fetchApplications();
  }, []);

  const fetchApplications = async () => {
    try {
      const response = await fetch(API_URL);
      const data = await response.json();
      setApplications(data.applications || []);
    } catch (error) {
      console.error('Error fetching applications:', error);
    }
  };

  const handleSubmitApplication = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      await fetch(API_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(formData)
      });
      setFormData({ childName: '', childAge: '', parentName: '', phone: '', comment: '' });
      fetchApplications();
      alert('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
    } catch (error) {
      console.error('Error submitting application:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏');
    }
  };

  const handleApprove = async (id: number) => {
    try {
      await fetch(API_URL, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id, status: 'approved' })
      });
      fetchApplications();
    } catch (error) {
      console.error('Error approving application:', error);
    }
  };

  const handleReject = async (id: number) => {
    try {
      await fetch(API_URL, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id, status: 'rejected' })
      });
      fetchApplications();
    } catch (error) {
      console.error('Error rejecting application:', error);
    }
  };

  const handleCoachLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoginError('');
    try {
      const response = await fetch(AUTH_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(loginForm)
      });
      const data = await response.json();
      
      if (data.success) {
        setIsCoachLoggedIn(true);
        setCoachData(data.coach);
        setActiveSection('–ø–∞–Ω–µ–ª—å-—Ç—Ä–µ–Ω–µ—Ä–∞');
        setLoginForm({ username: '', password: '' });
      } else {
        setLoginError(data.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞');
      }
    } catch (error) {
      console.error('Login error:', error);
      setLoginError('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
    }
  };

  const handleCoachLogout = () => {
    setIsCoachLoggedIn(false);
    setCoachData(null);
    setActiveSection('–≥–ª–∞–≤–Ω–∞—è');
  };

  const handleRegister = async (e: React.FormEvent) => {
    e.preventDefault();
    setRegisterError('');
    try {
      const response = await fetch(AUTH_URL + '/register', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(registerForm)
      });
      const data = await response.json();
      
      if (data.success) {
        alert('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.');
        setShowRegister(false);
        setRegisterForm({ username: '', password: '', fullName: '' });
      } else {
        setRegisterError(data.message || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
      }
    } catch (error) {
      console.error('Register error:', error);
      setRegisterError('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
    }
  };

  const handleAddAthlete = () => {
    if (newAthlete.name && newAthlete.age) {
      const id = athletesList.length > 0 ? Math.max(...athletesList.map(a => a.id)) + 1 : 1;
      setAthletesList([...athletesList, { id, ...newAthlete, age: parseInt(newAthlete.age) }]);
      setNewAthlete({ name: '', age: '', achievements: '', image: 'üéø' });
      setShowAddAthlete(false);
    }
  };

  const handleRemoveAthlete = (id: number) => {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞?')) {
      setAthletesList(athletesList.filter(a => a.id !== id));
    }
  };

  const handleAddSchedule = () => {
    if (newSchedule.time && newSchedule.group && newSchedule.coach) {
      const id = scheduleList.length > 0 ? Math.max(...scheduleList.map(s => s.id)) + 1 : 1;
      setScheduleList([...scheduleList, { id, ...newSchedule }]);
      setNewSchedule({ day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', time: '', group: '', coach: '' });
      setShowAddSchedule(false);
    }
  };

  const handleRemoveSchedule = (id: number) => {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É?')) {
      setScheduleList(scheduleList.filter(s => s.id !== id));
    }
  };

  const handleEditSchedule = (id: number) => {
    const scheduleToEdit = scheduleList.find(s => s.id === id);
    if (scheduleToEdit) {
      setNewSchedule({ ...scheduleToEdit });
      setEditingSchedule(id);
      setShowAddSchedule(true);
    }
  };

  const handleUpdateSchedule = () => {
    if (editingSchedule && newSchedule.time && newSchedule.group && newSchedule.coach) {
      setScheduleList(scheduleList.map(s => 
        s.id === editingSchedule ? { id: editingSchedule, ...newSchedule } : s
      ));
      setNewSchedule({ day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', time: '', group: '', coach: '' });
      setEditingSchedule(null);
      setShowAddSchedule(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-50 to-white">
      <nav className="bg-white shadow-sm sticky top-0 z-50 border-b border-blue-100">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-2">
              <span className="text-4xl">‚õ∑Ô∏è</span>
              <h1 className="text-2xl font-bold bg-gradient-to-r from-blue-600 to-red-500 bg-clip-text text-transparent">
                –õ–´–ñ–ù–ê–Ø –ö–û–ú–ê–ù–î–ê –ë–ê–í–õ–´
              </h1>
            </div>
            <div className="hidden md:flex items-center space-x-6">
              {['–ì–ª–∞–≤–Ω–∞—è', '–°–ø–æ—Ä—Ç—Å–º–µ–Ω—ã', '–°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è', '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '–ì–∞–ª–µ—Ä–µ—è', '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', '–ó–∞—è–≤–∫–∏'].map((item) => (
                <button
                  key={item}
                  onClick={() => setActiveSection(item.toLowerCase())}
                  className={`font-semibold transition-all ${
                    activeSection === item.toLowerCase()
                      ? 'text-blue-600 border-b-2 border-blue-600'
                      : 'text-gray-600 hover:text-blue-600'
                  }`}
                >
                  {item}
                </button>
              ))}
              {isCoachLoggedIn ? (
                <div className="flex items-center space-x-4 ml-4 pl-4 border-l border-gray-300">
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() => setActiveSection('–ø–∞–Ω–µ–ª—å-—Ç—Ä–µ–Ω–µ—Ä–∞')}
                    className="border-blue-600 text-blue-600 hover:bg-blue-50"
                  >
                    <Icon name="UserCog" className="mr-2" size={16} />
                    –ü–∞–Ω–µ–ª—å —Ç—Ä–µ–Ω–µ—Ä–∞
                  </Button>
                  <Button
                    size="sm"
                    variant="ghost"
                    onClick={handleCoachLogout}
                    className="text-red-500 hover:text-red-600 hover:bg-red-50"
                  >
                    <Icon name="LogOut" size={16} />
                  </Button>
                </div>
              ) : (
                <Button
                  size="sm"
                  variant="outline"
                  onClick={() => setActiveSection('–≤—Ö–æ–¥-—Ç—Ä–µ–Ω–µ—Ä–∞')}
                  className="ml-4 border-blue-600 text-blue-600 hover:bg-blue-50"
                >
                  <Icon name="Lock" className="mr-2" size={16} />
                  –í—Ö–æ–¥ –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞
                </Button>
              )}
            </div>
          </div>
        </div>
      </nav>

      <main className="container mx-auto px-4 py-12">
        {activeSection === '–≥–ª–∞–≤–Ω–∞—è' && (
          <div className="space-y-16 animate-fade-in">
            <section className="text-center space-y-6 py-20">
              <h2 className="text-6xl font-black bg-gradient-to-r from-blue-600 via-blue-500 to-red-500 bg-clip-text text-transparent">
                –í–ü–ï–†–ï–î –ö –ü–û–ë–ï–î–ê–ú!
              </h2>
              <p className="text-xl text-gray-600 max-w-2xl mx-auto">
                –ú—ã –∫–æ–º–∞–Ω–¥–∞ —é–Ω—ã—Ö –ª—ã–∂–Ω–∏–∫–æ–≤ –≥–æ—Ä–æ–¥–∞ –ë–∞–≤–ª—ã. –¢—Ä–µ–Ω–∏—Ä—É–µ–º—Å—è, —É—á–∞—Å—Ç–≤—É–µ–º –≤ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö –∏ –ø–æ–±–µ–∂–¥–∞–µ–º!
              </p>
              <div className="flex justify-center gap-4">
                <Button 
                  size="lg" 
                  className="bg-blue-600 hover:bg-blue-700 text-white font-bold"
                  onClick={() => setActiveSection('—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')}
                >
                  <Icon name="UserPlus" className="mr-2" />
                  –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è
                </Button>
                <Button 
                  size="lg" 
                  variant="outline"
                  className="border-red-500 text-red-500 hover:bg-red-50 font-bold"
                  onClick={() => setActiveSection('—Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è')}
                >
                  <Icon name="Trophy" className="mr-2" />
                  –°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è
                </Button>
              </div>
            </section>

            <section className="grid md:grid-cols-3 gap-6">
              <Card className="p-6 text-center hover:shadow-lg transition-all hover:scale-105 border-blue-200">
                <div className="text-5xl mb-4">üèÜ</div>
                <h3 className="text-2xl font-bold text-blue-600 mb-2">50+</h3>
                <p className="text-gray-600">–ü–æ–±–µ–¥ –≤ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö</p>
              </Card>
              <Card className="p-6 text-center hover:shadow-lg transition-all hover:scale-105 border-red-200">
                <div className="text-5xl mb-4">üë•</div>
                <h3 className="text-2xl font-bold text-red-500 mb-2">30</h3>
                <p className="text-gray-600">–°–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ</p>
              </Card>
              <Card className="p-6 text-center hover:shadow-lg transition-all hover:scale-105 border-blue-200">
                <div className="text-5xl mb-4">‚≠ê</div>
                <h3 className="text-2xl font-bold text-blue-600 mb-2">10</h3>
                <p className="text-gray-600">–õ–µ—Ç —É—Å–ø–µ—à–Ω–æ–π —Ä–∞–±–æ—Ç—ã</p>
              </Card>
            </section>

            <section>
              <h3 className="text-3xl font-bold text-center mb-8">–ù–∞—à–∏ –∑–≤—ë–∑–¥—ã</h3>
              <div className="grid md:grid-cols-4 gap-6">
                {athletesList.slice(0, 4).map((athlete) => (
                  <Card key={athlete.id} className="p-6 text-center hover:shadow-xl transition-all hover:scale-105 animate-scale-in">
                    <div className="text-6xl mb-4">{athlete.image}</div>
                    <h4 className="font-bold text-lg mb-2">{athlete.name}</h4>
                    <p className="text-sm text-gray-500 mb-2">{athlete.age} –ª–µ—Ç</p>
                    <Badge className="bg-blue-100 text-blue-700">{athlete.achievements}</Badge>
                  </Card>
                ))}
              </div>
            </section>
          </div>
        )}

        {activeSection === '—Å–ø–æ—Ä—Ç—Å–º–µ–Ω—ã' && (
          <div className="animate-fade-in">
            <h2 className="text-4xl font-bold text-center mb-12 text-blue-600">–ù–∞—à–∏ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω—ã</h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
              {athletesList.map((athlete) => (
                <Card key={athlete.id} className="p-6 hover:shadow-xl transition-all hover:scale-105">
                  <div className="flex items-start space-x-4">
                    <div className="text-5xl">{athlete.image}</div>
                    <div className="flex-1">
                      <h3 className="font-bold text-xl mb-1">{athlete.name}</h3>
                      <p className="text-sm text-gray-500 mb-3">{athlete.age} –ª–µ—Ç</p>
                      <Badge className="bg-gradient-to-r from-blue-500 to-blue-600 text-white">
                        {athlete.achievements}
                      </Badge>
                    </div>
                  </div>
                </Card>
              ))}
            </div>
          </div>
        )}

        {activeSection === '—Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è' && (
          <div className="animate-fade-in space-y-8">
            <div className="text-center space-y-4">
              <h2 className="text-4xl font-bold text-blue-600">–ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è</h2>
              <p className="text-gray-600">–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è–º–∏ –≤ –ø—Ä—è–º–æ–º —ç—Ñ–∏—Ä–µ</p>
              <Button 
                size="lg" 
                className="bg-red-500 hover:bg-red-600 text-white font-bold"
                onClick={() => window.open('https://myfinish.ru', '_blank')}
              >
                <Icon name="Video" className="mr-2" />
                –°–º–æ—Ç—Ä–µ—Ç—å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –Ω–∞ MyFinish.ru
              </Button>
            </div>
            
            <div className="space-y-4">
              {competitions.map((comp, idx) => (
                <Card key={idx} className="p-6 hover:shadow-lg transition-all border-l-4 border-blue-500">
                  <div className="flex items-center justify-between">
                    <div className="flex items-start space-x-4 flex-1">
                      <Icon name="Calendar" className="text-blue-600 mt-1" size={24} />
                      <div>
                        <h3 className="font-bold text-xl mb-1">{comp.name}</h3>
                        <p className="text-gray-600 mb-1">{comp.date}</p>
                        <p className="text-sm text-gray-500 flex items-center">
                          <Icon name="MapPin" className="mr-1" size={16} />
                          {comp.location}
                        </p>
                      </div>
                    </div>
                    <Badge className="bg-green-100 text-green-700">–°–∫–æ—Ä–æ</Badge>
                  </div>
                </Card>
              ))}
            </div>
          </div>
        )}

        {activeSection === '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ' && (
          <div className="animate-fade-in">
            <h2 className="text-4xl font-bold text-center mb-12 text-blue-600">–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</h2>
            <div className="space-y-4 max-w-4xl mx-auto">
              {scheduleList.map((item) => (
                <Card key={item.id} className="p-6 hover:shadow-lg transition-all border-l-4 border-red-500">
                  <div className="flex items-center justify-between flex-wrap gap-4">
                    <div className="flex items-center space-x-4">
                      <div className="text-center min-w-[100px]">
                        <Badge className="bg-blue-600 text-white text-sm">{item.day}</Badge>
                        <p className="text-lg font-bold text-blue-600 mt-2">{item.time}</p>
                      </div>
                      <div className="border-l-2 border-gray-200 pl-4">
                        <h3 className="font-bold text-lg mb-1">{item.group}</h3>
                        <p className="text-gray-600 flex items-center">
                          <Icon name="User" className="mr-2" size={16} />
                          –¢—Ä–µ–Ω–µ—Ä: {item.coach}
                        </p>
                      </div>
                    </div>
                  </div>
                </Card>
              ))}
            </div>
            <div className="mt-12 text-center">
              <Card className="p-8 max-w-2xl mx-auto bg-gradient-to-r from-blue-50 to-red-50">
                <Icon name="Info" className="mx-auto mb-4 text-blue-600" size={48} />
                <h3 className="text-2xl font-bold mb-4">–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                <div className="text-left space-y-2 text-gray-700">
                  <p>‚Ä¢ –ü—Ä–æ—Å—å–±–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∑–∞ 15 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏</p>
                  <p>‚Ä¢ –ü—Ä–∏ —Å–µ–±–µ –∏–º–µ—Ç—å —Å–º–µ–Ω–Ω—É—é –æ–¥–µ–∂–¥—É –∏ –≤–æ–¥—É</p>
                  <p>‚Ä¢ –í —Å–ª—É—á–∞–µ –ø—Ä–æ–ø—É—Å–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å —Ç—Ä–µ–Ω–µ—Ä–∞ –∑–∞—Ä–∞–Ω–µ–µ</p>
                  <p>‚Ä¢ –õ—ã–∂–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∫–ª—É–±–æ–º</p>
                </div>
              </Card>
            </div>
          </div>
        )}

        {activeSection === '–≥–∞–ª–µ—Ä–µ—è' && (
          <div className="animate-fade-in">
            <h2 className="text-4xl font-bold text-center mb-12 text-blue-600">–§–æ—Ç–æ–≥–∞–ª–µ—Ä–µ—è</h2>
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
              {gallery.map((item, idx) => (
                <Card key={idx} className="overflow-hidden hover:shadow-xl transition-all hover:scale-105 group">
                  <div className="bg-gradient-to-br from-blue-100 to-red-100 p-12 flex items-center justify-center text-8xl">
                    {item.image}
                  </div>
                  <div className="p-6">
                    <h3 className="font-bold text-xl mb-2 group-hover:text-blue-600 transition-colors">{item.title}</h3>
                    <p className="text-gray-600">{item.description}</p>
                  </div>
                </Card>
              ))}
            </div>
            <div className="mt-12 text-center">
              <Card className="p-8 max-w-xl mx-auto">
                <Icon name="Camera" className="mx-auto mb-4 text-red-500" size={48} />
                <h3 className="text-2xl font-bold mb-4">–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ —Ñ–æ—Ç–æ!</h3>
                <p className="text-gray-600 mb-4">–ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</p>
                <Button className="bg-red-500 hover:bg-red-600 text-white">
                  <Icon name="Upload" className="mr-2" />
                  –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ
                </Button>
              </Card>
            </div>
          </div>
        )}

        {activeSection === '—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è' && (
          <div className="max-w-2xl mx-auto animate-fade-in">
            <h2 className="text-4xl font-bold text-center mb-8 text-blue-600">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>
            <Card className="p-8">
              <Tabs defaultValue="parent" className="w-full">
                <TabsList className="grid w-full grid-cols-3 mb-6">
                  <TabsTrigger value="parent">–†–æ–¥–∏—Ç–µ–ª—å</TabsTrigger>
                  <TabsTrigger value="athlete">–°–ø–æ—Ä—Ç—Å–º–µ–Ω</TabsTrigger>
                  <TabsTrigger value="coach">–¢—Ä–µ–Ω–µ—Ä</TabsTrigger>
                </TabsList>
                
                <TabsContent value="parent" className="space-y-4">
                  <div className="space-y-2">
                    <Label>–§–ò–û —Ä–æ–¥–∏—Ç–µ–ª—è</Label>
                    <Input placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á" />
                  </div>
                  <div className="space-y-2">
                    <Label>–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                    <Input placeholder="+7 900 123-45-67" />
                  </div>
                  <div className="space-y-2">
                    <Label>Email</Label>
                    <Input type="email" placeholder="email@example.com" />
                  </div>
                  <Button className="w-full bg-blue-600 hover:bg-blue-700">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</Button>
                </TabsContent>

                <TabsContent value="athlete" className="space-y-4">
                  <div className="space-y-2">
                    <Label>–§–ò–û —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞</Label>
                    <Input placeholder="–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á" />
                  </div>
                  <div className="space-y-2">
                    <Label>–í–æ–∑—Ä–∞—Å—Ç</Label>
                    <Input type="number" placeholder="14" />
                  </div>
                  <div className="space-y-2">
                    <Label>–¢–µ–ª–µ—Ñ–æ–Ω —Ä–æ–¥–∏—Ç–µ–ª—è</Label>
                    <Input placeholder="+7 900 123-45-67" />
                  </div>
                  <Button className="w-full bg-blue-600 hover:bg-blue-700">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</Button>
                </TabsContent>

                <TabsContent value="coach" className="space-y-4">
                  <div className="space-y-2">
                    <Label>–§–ò–û —Ç—Ä–µ–Ω–µ—Ä–∞</Label>
                    <Input placeholder="–°–∏–¥–æ—Ä–æ–≤ –°–∏–¥–æ—Ä –°–∏–¥–æ—Ä–æ–≤–∏—á" />
                  </div>
                  <div className="space-y-2">
                    <Label>–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è</Label>
                    <Input placeholder="–ú–∞—Å—Ç–µ—Ä —Å–ø–æ—Ä—Ç–∞" />
                  </div>
                  <div className="space-y-2">
                    <Label>–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                    <Input placeholder="+7 900 123-45-67" />
                  </div>
                  <div className="space-y-2">
                    <Label>Email</Label>
                    <Input type="email" placeholder="coach@example.com" />
                  </div>
                  <Button className="w-full bg-blue-600 hover:bg-blue-700">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</Button>
                </TabsContent>
              </Tabs>
            </Card>
          </div>
        )}

        {activeSection === '–≤—Ö–æ–¥-—Ç—Ä–µ–Ω–µ—Ä–∞' && (
          <div className="max-w-md mx-auto animate-fade-in">
            <Card className="p-8">
              <div className="text-center mb-6">
                <Icon name="Lock" className="mx-auto mb-4 text-blue-600" size={48} />
                <h2 className="text-3xl font-bold text-blue-600 mb-2">–í—Ö–æ–¥ –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞</h2>
                <p className="text-gray-600">–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å</p>
              </div>
              <form onSubmit={handleCoachLogin} className="space-y-4">
                <div className="space-y-2">
                  <Label>–õ–æ–≥–∏–Ω</Label>
                  <Input
                    placeholder="trainer"
                    value={loginForm.username}
                    onChange={(e) => setLoginForm({...loginForm, username: e.target.value})}
                    required
                  />
                </div>
                <div className="space-y-2">
                  <Label>–ü–∞—Ä–æ–ª—å</Label>
                  <Input
                    type="password"
                    placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                    value={loginForm.password}
                    onChange={(e) => setLoginForm({...loginForm, password: e.target.value})}
                    required
                  />
                </div>
                {loginError && (
                  <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded">
                    {loginError}
                  </div>
                )}
                <Button type="submit" className="w-full bg-blue-600 hover:bg-blue-700">
                  <Icon name="LogIn" className="mr-2" />
                  –í–æ–π—Ç–∏
                </Button>
                <div className="text-center mt-4">
                  <button 
                    type="button"
                    onClick={() => setShowRegister(!showRegister)}
                    className="text-sm text-blue-600 hover:underline"
                  >
                    {showRegister ? '–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –í–æ–π—Ç–∏' : '–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'}
                  </button>
                </div>
              </form>
            </Card>

            {showRegister && (
              <Card className="p-8 mt-6">
                <div className="text-center mb-6">
                  <Icon name="UserPlus" className="mx-auto mb-4 text-blue-600" size={48} />
                  <h2 className="text-3xl font-bold text-blue-600 mb-2">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç—Ä–µ–Ω–µ—Ä–∞</h2>
                  <p className="text-gray-600">–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç</p>
                </div>
                <form onSubmit={handleRegister} className="space-y-4">
                  <div className="space-y-2">
                    <Label>–§–ò–û</Label>
                    <Input
                      placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
                      value={registerForm.fullName}
                      onChange={(e) => setRegisterForm({...registerForm, fullName: e.target.value})}
                      required
                    />
                  </div>
                  <div className="space-y-2">
                    <Label>–õ–æ–≥–∏–Ω</Label>
                    <Input
                      placeholder="ivan_ivanov"
                      value={registerForm.username}
                      onChange={(e) => setRegisterForm({...registerForm, username: e.target.value})}
                      required
                    />
                  </div>
                  <div className="space-y-2">
                    <Label>–ü–∞—Ä–æ–ª—å</Label>
                    <Input
                      type="password"
                      placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                      value={registerForm.password}
                      onChange={(e) => setRegisterForm({...registerForm, password: e.target.value})}
                      required
                    />
                  </div>
                  {registerError && (
                    <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded">
                      {registerError}
                    </div>
                  )}
                  <Button type="submit" className="w-full bg-green-600 hover:bg-green-700">
                    <Icon name="UserPlus" className="mr-2" />
                    –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                  </Button>
                </form>
              </Card>
            )}
          </div>
        )}

        {activeSection === '–ø–∞–Ω–µ–ª—å-—Ç—Ä–µ–Ω–µ—Ä–∞' && isCoachLoggedIn && (
          <div className="animate-fade-in space-y-8">
            <div className="text-center">
              <h2 className="text-4xl font-bold text-blue-600 mb-2">–ü–∞–Ω–µ–ª—å —Ç—Ä–µ–Ω–µ—Ä–∞</h2>
              <p className="text-gray-600">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {coachData?.name}</p>
            </div>
            
            <Card className="p-6">
              <h3 className="text-2xl font-bold mb-6 flex items-center">
                <Icon name="UserCheck" className="mr-2 text-blue-600" />
                –ó–∞—è–≤–∫–∏ –≤ –∫–æ–º–∞–Ω–¥—É
              </h3>
              <div className="space-y-4">
                {applications.length === 0 ? (
                  <div className="text-center py-12 text-gray-500">
                    <Icon name="Inbox" className="mx-auto mb-4" size={48} />
                    <p>–ù–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç</p>
                  </div>
                ) : (
                  applications.map((app) => (
                    <Card key={app.id} className="p-4 border-l-4 border-blue-500">
                      <div className="space-y-2">
                        <div className="flex items-center justify-between">
                          <h4 className="font-bold text-lg">{app.name}</h4>
                          <Badge className={
                            app.status === 'approved' ? 'bg-green-100 text-green-700' :
                            app.status === 'rejected' ? 'bg-red-100 text-red-700' :
                            'bg-yellow-100 text-yellow-700'
                          }>
                            {app.status === 'approved' ? '–û–¥–æ–±—Ä–µ–Ω–∞' :
                             app.status === 'rejected' ? '–û—Ç–∫–ª–æ–Ω–µ–Ω–∞' :
                             '–û–∂–∏–¥–∞–µ—Ç'}
                          </Badge>
                        </div>
                        <p className="text-sm text-gray-600">–í–æ–∑—Ä–∞—Å—Ç: {app.age} –ª–µ—Ç</p>
                        <p className="text-sm text-gray-600">–†–æ–¥–∏—Ç–µ–ª—å: {app.parent}</p>
                        <p className="text-sm text-gray-600">–¢–µ–ª–µ—Ñ–æ–Ω: {app.phone}</p>
                        {app.comment && (
                          <p className="text-sm text-gray-600 bg-gray-50 p-2 rounded">
                            <strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</strong> {app.comment}
                          </p>
                        )}
                        
                        {app.status === 'pending' && (
                          <div className="flex gap-2 pt-2">
                            <Button 
                              size="sm" 
                              className="flex-1 bg-green-600 hover:bg-green-700"
                              onClick={() => handleApprove(app.id)}
                            >
                              <Icon name="Check" className="mr-1" size={16} />
                              –ü—Ä–∏–Ω—è—Ç—å
                            </Button>
                            <Button 
                              size="sm" 
                              variant="outline"
                              className="flex-1 border-red-500 text-red-500 hover:bg-red-50"
                              onClick={() => handleReject(app.id)}
                            >
                              <Icon name="X" className="mr-1" size={16} />
                              –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                            </Button>
                          </div>
                        )}
                      </div>
                    </Card>
                  ))
                )}
              </div>
            </Card>

            <Card className="p-6">
              <div className="flex items-center justify-between mb-6">
                <h3 className="text-2xl font-bold flex items-center">
                  <Icon name="Users" className="mr-2 text-blue-600" />
                  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞–º–∏
                </h3>
                <Button 
                  onClick={() => setShowAddAthlete(!showAddAthlete)}
                  className="bg-green-600 hover:bg-green-700"
                >
                  <Icon name="Plus" className="mr-2" />
                  –î–æ–±–∞–≤–∏—Ç—å —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞
                </Button>
              </div>

              {showAddAthlete && (
                <Card className="p-4 mb-6 bg-green-50 border-green-200">
                  <h4 className="font-bold mb-4">–ù–æ–≤—ã–π —Å–ø–æ—Ä—Ç—Å–º–µ–Ω</h4>
                  <div className="grid md:grid-cols-2 gap-4">
                    <div className="space-y-2">
                      <Label>–§–ò–û</Label>
                      <Input
                        placeholder="–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á"
                        value={newAthlete.name}
                        onChange={(e) => setNewAthlete({...newAthlete, name: e.target.value})}
                      />
                    </div>
                    <div className="space-y-2">
                      <Label>–í–æ–∑—Ä–∞—Å—Ç</Label>
                      <Input
                        type="number"
                        placeholder="14"
                        value={newAthlete.age}
                        onChange={(e) => setNewAthlete({...newAthlete, age: e.target.value})}
                      />
                    </div>
                    <div className="space-y-2 md:col-span-2">
                      <Label>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</Label>
                      <Input
                        placeholder="1 –º–µ—Å—Ç–æ - –ö—É–±–æ–∫ –≥–æ—Ä–æ–¥–∞"
                        value={newAthlete.achievements}
                        onChange={(e) => setNewAthlete({...newAthlete, achievements: e.target.value})}
                      />
                    </div>
                    <div className="space-y-2">
                      <Label>–≠–º–æ–¥–∑–∏</Label>
                      <Input
                        placeholder="üéø"
                        value={newAthlete.image}
                        onChange={(e) => setNewAthlete({...newAthlete, image: e.target.value})}
                      />
                    </div>
                  </div>
                  <div className="flex gap-2 mt-4">
                    <Button 
                      onClick={handleAddAthlete}
                      className="bg-green-600 hover:bg-green-700"
                    >
                      <Icon name="Check" className="mr-2" />
                      –î–æ–±–∞–≤–∏—Ç—å
                    </Button>
                    <Button 
                      variant="outline"
                      onClick={() => {
                        setShowAddAthlete(false);
                        setNewAthlete({ name: '', age: '', achievements: '', image: 'üéø' });
                      }}
                    >
                      –û—Ç–º–µ–Ω–∞
                    </Button>
                  </div>
                </Card>
              )}

              <div className="grid md:grid-cols-2 gap-4">
                {athletesList.map((athlete) => (
                  <Card key={athlete.id} className="p-4 hover:shadow-lg transition-all">
                    <div className="flex items-start justify-between">
                      <div className="flex items-start space-x-4 flex-1">
                        <div className="text-4xl">{athlete.image}</div>
                        <div className="flex-1">
                          <h4 className="font-bold text-lg mb-1">{athlete.name}</h4>
                          <p className="text-sm text-gray-500 mb-2">{athlete.age} –ª–µ—Ç</p>
                          <Badge className="bg-blue-100 text-blue-700 text-xs">
                            {athlete.achievements}
                          </Badge>
                        </div>
                      </div>
                      <Button 
                        size="sm"
                        variant="outline"
                        className="border-red-500 text-red-500 hover:bg-red-50"
                        onClick={() => handleRemoveAthlete(athlete.id)}
                      >
                        <Icon name="Trash2" size={16} />
                      </Button>
                    </div>
                  </Card>
                ))}
              </div>
            </Card>

            <Card className="p-6">
              <div className="flex items-center justify-between mb-6">
                <h3 className="text-2xl font-bold flex items-center">
                  <Icon name="Calendar" className="mr-2 text-blue-600" />
                  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
                </h3>
                <Button 
                  onClick={() => {
                    setShowAddSchedule(!showAddSchedule);
                    if (editingSchedule) {
                      setEditingSchedule(null);
                      setNewSchedule({ day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', time: '', group: '', coach: '' });
                    }
                  }}
                  className="bg-green-600 hover:bg-green-700"
                >
                  <Icon name="Plus" className="mr-2" />
                  –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
                </Button>
              </div>

              {showAddSchedule && (
                <Card className="p-4 mb-6 bg-green-50 border-green-200">
                  <h4 className="font-bold mb-4">
                    {editingSchedule ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É' : '–ù–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞'}
                  </h4>
                  <div className="grid md:grid-cols-2 gap-4">
                    <div className="space-y-2">
                      <Label>–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏</Label>
                      <select
                        className="w-full border rounded-md px-3 py-2"
                        value={newSchedule.day}
                        onChange={(e) => setNewSchedule({...newSchedule, day: e.target.value})}
                      >
                        <option>–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫</option>
                        <option>–í—Ç–æ—Ä–Ω–∏–∫</option>
                        <option>–°—Ä–µ–¥–∞</option>
                        <option>–ß–µ—Ç–≤–µ—Ä–≥</option>
                        <option>–ü—è—Ç–Ω–∏—Ü–∞</option>
                        <option>–°—É–±–±–æ—Ç–∞</option>
                        <option>–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ</option>
                      </select>
                    </div>
                    <div className="space-y-2">
                      <Label>–í—Ä–µ–º—è</Label>
                      <Input
                        placeholder="16:00 - 18:00"
                        value={newSchedule.time}
                        onChange={(e) => setNewSchedule({...newSchedule, time: e.target.value})}
                      />
                    </div>
                    <div className="space-y-2">
                      <Label>–ì—Ä—É–ø–ø–∞</Label>
                      <Input
                        placeholder="–ú–ª–∞–¥—à–∞—è –≥—Ä—É–ø–ø–∞ (8-11 –ª–µ—Ç)"
                        value={newSchedule.group}
                        onChange={(e) => setNewSchedule({...newSchedule, group: e.target.value})}
                      />
                    </div>
                    <div className="space-y-2">
                      <Label>–¢—Ä–µ–Ω–µ—Ä</Label>
                      <Input
                        placeholder="–ò–≤–∞–Ω–æ–≤ –ü.–°."
                        value={newSchedule.coach}
                        onChange={(e) => setNewSchedule({...newSchedule, coach: e.target.value})}
                      />
                    </div>
                  </div>
                  <div className="flex gap-2 mt-4">
                    <Button 
                      onClick={editingSchedule ? handleUpdateSchedule : handleAddSchedule}
                      className="bg-green-600 hover:bg-green-700"
                    >
                      <Icon name="Check" className="mr-2" />
                      {editingSchedule ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å' : '–î–æ–±–∞–≤–∏—Ç—å'}
                    </Button>
                    <Button 
                      variant="outline"
                      onClick={() => {
                        setShowAddSchedule(false);
                        setEditingSchedule(null);
                        setNewSchedule({ day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', time: '', group: '', coach: '' });
                      }}
                    >
                      –û—Ç–º–µ–Ω–∞
                    </Button>
                  </div>
                </Card>
              )}

              <div className="space-y-3">
                {scheduleList.map((item) => (
                  <Card key={item.id} className="p-4 hover:shadow-lg transition-all border-l-4 border-blue-500">
                    <div className="flex items-center justify-between flex-wrap gap-4">
                      <div className="flex items-center space-x-4 flex-1">
                        <div className="text-center min-w-[100px]">
                          <Badge className="bg-blue-600 text-white text-sm">{item.day}</Badge>
                          <p className="text-sm font-bold text-blue-600 mt-1">{item.time}</p>
                        </div>
                        <div className="border-l-2 border-gray-200 pl-4 flex-1">
                          <h4 className="font-bold mb-1">{item.group}</h4>
                          <p className="text-sm text-gray-600">–¢—Ä–µ–Ω–µ—Ä: {item.coach}</p>
                        </div>
                      </div>
                      <div className="flex gap-2">
                        <Button 
                          size="sm"
                          variant="outline"
                          className="border-blue-500 text-blue-500 hover:bg-blue-50"
                          onClick={() => handleEditSchedule(item.id)}
                        >
                          <Icon name="Edit" size={16} />
                        </Button>
                        <Button 
                          size="sm"
                          variant="outline"
                          className="border-red-500 text-red-500 hover:bg-red-50"
                          onClick={() => handleRemoveSchedule(item.id)}
                        >
                          <Icon name="Trash2" size={16} />
                        </Button>
                      </div>
                    </div>
                  </Card>
                ))}
              </div>
            </Card>
          </div>
        )}

        {activeSection === '–∑–∞—è–≤–∫–∏' && (
          <div className="animate-fade-in space-y-8">
            <h2 className="text-4xl font-bold text-center text-blue-600">–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –≤ –∫–æ–º–∞–Ω–¥—É</h2>
            
            <Card className="p-6 max-w-2xl mx-auto">
              <h3 className="text-2xl font-bold mb-6 flex items-center">
                <Icon name="ClipboardList" className="mr-2 text-blue-600" />
                –§–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏
              </h3>
              
              <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
                <div className="flex items-start space-x-3">
                  <Icon name="Info" className="text-blue-600 mt-1 flex-shrink-0" size={20} />
                  <div className="text-sm text-blue-900">
                    <p className="font-semibold mb-1">–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</p>
                    <p>–ü—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –Ω–∞–ª–∏—á–∏–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏–π –∏–ª–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –∑–¥–æ—Ä–æ–≤—å—è —Ä–µ–±–µ–Ω–∫–∞ (–∞–ª–ª–µ—Ä–≥–∏–∏, —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è, —Ç—Ä–∞–≤–º—ã –∏ —Ç.–¥.)</p>
                  </div>
                </div>
              </div>

              <form className="space-y-4" onSubmit={handleSubmitApplication}>
                  <div className="space-y-2">
                    <Label>–§–ò–û —Ä–µ–±–µ–Ω–∫–∞</Label>
                    <Input 
                      placeholder="–ò–≤–∞–Ω–æ–≤ –ü–µ—Ç—Ä –ò–≤–∞–Ω–æ–≤–∏—á" 
                      value={formData.childName}
                      onChange={(e) => setFormData({...formData, childName: e.target.value})}
                      required
                    />
                  </div>
                  <div className="space-y-2">
                    <Label>–í–æ–∑—Ä–∞—Å—Ç</Label>
                    <Input 
                      type="number" 
                      placeholder="12"
                      value={formData.childAge}
                      onChange={(e) => setFormData({...formData, childAge: e.target.value})}
                      required
                    />
                  </div>
                  <div className="space-y-2">
                    <Label>–§–ò–û —Ä–æ–¥–∏—Ç–µ–ª—è</Label>
                    <Input 
                      placeholder="–ò–≤–∞–Ω–æ–≤–∞ –ú–∞—Ä–∏—è –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞"
                      value={formData.parentName}
                      onChange={(e) => setFormData({...formData, parentName: e.target.value})}
                      required
                    />
                  </div>
                  <div className="space-y-2">
                    <Label>–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                    <Input 
                      placeholder="+7 900 123-45-67"
                      value={formData.phone}
                      onChange={(e) => setFormData({...formData, phone: e.target.value})}
                      required
                    />
                  </div>
                  <div className="space-y-2">
                    <Label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, –æ–ø—ã—Ç –∏ –¥—Ä.)</Label>
                    <Textarea 
                      placeholder="–£–∫–∞–∂–∏—Ç–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∑–¥–æ—Ä–æ–≤—å—è, –æ–ø—ã—Ç –∫–∞—Ç–∞–Ω–∏—è –Ω–∞ –ª—ã–∂–∞—Ö –∏ –¥—Ä—É–≥—É—é –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é..."
                      value={formData.comment}
                      onChange={(e) => setFormData({...formData, comment: e.target.value})}
                      className="min-h-[100px]"
                    />
                  </div>
                  <Button type="submit" className="w-full bg-red-500 hover:bg-red-600 text-white font-bold">
                    <Icon name="Send" className="mr-2" />
                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                  </Button>
                </form>
              </Card>
          </div>
        )}
      </main>

      <footer className="bg-gradient-to-r from-blue-600 to-blue-700 text-white py-12 mt-20">
        <div className="container mx-auto px-4">
          <div className="grid md:grid-cols-3 gap-8">
            <div>
              <h3 className="text-xl font-bold mb-4 flex items-center">
                <Icon name="MapPin" className="mr-2" />
                –ö–æ–Ω—Ç–∞–∫—Ç—ã
              </h3>
              <p className="mb-2">–≥. –ë–∞–≤–ª—ã, –†–µ—Å–ø—É–±–ª–∏–∫–∞ –¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω</p>
              <p className="mb-2">–õ—ã–∂–Ω–∞—è –±–∞–∑–∞ "–¢—Ä–µ—Ö–≥–æ—Ä–∫–∞"</p>
              <p>–¢–µ–ª–µ—Ñ–æ–Ω: +7 904 678 52 08</p>
            </div>
            <div>
              <h3 className="text-xl font-bold mb-4 flex items-center">
                <Icon name="Clock" className="mr-2" />
                –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
              </h3>
              <p className="mb-2">–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞: 15:00 - 20:00</p>
              <p className="mb-2">–°—É–±–±–æ—Ç–∞ - –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: 10:00 - 18:00</p>
            </div>
            <div>
              <h3 className="text-xl font-bold mb-4 flex items-center">
                <Icon name="Users" className="mr-2" />
                –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏
              </h3>
              <div className="flex space-x-4">
                <Button variant="outline" size="icon" className="border-white text-white hover:bg-white hover:text-blue-600">
                  <Icon name="Facebook" />
                </Button>
                <Button variant="outline" size="icon" className="border-white text-white hover:bg-white hover:text-blue-600">
                  <Icon name="Instagram" />
                </Button>
                <Button variant="outline" size="icon" className="border-white text-white hover:bg-white hover:text-blue-600">
                  <Icon name="Mail" />
                </Button>
              </div>
            </div>
          </div>
          <div className="text-center mt-8 pt-8 border-t border-blue-500">
            <p>&copy; 2024 –õ—ã–∂–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ë–∞–≤–ª—ã. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;